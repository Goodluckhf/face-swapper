version: "2"
x-environment: &env
  - CELERY_BROKER_URL=redis://redis:6379/0
  - CELERY_RESULT_BACKEND=redis://redis:6379/0
  - ACCESS_KEY=minioadmin
  - SECRET_KEY=minioadmin
  - ENDPOINT=minio:9000
  - BUCKET=data

services:
  inswapper:
    image: just1ce/inswapper-py-api:1.0.0
    build:
      context: ./InswapperService
      dockerfile: app.dockerfile
    command: uvicorn main:app --host 0.0.0.0
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - tmp-images-volume:/usr/src/app/tmp/
    environment: *env

  worker:
    image: just1ce/inswapper-py-worker:1.0.0
    build:
      context: ./InswapperService
      dockerfile: worker.dockerfile
    command: [ "celery", "-A", "worker", "worker", "-l", "info", "--max-tasks-per-child", "1", "--autoscale=5,1", "--concurrency", "1", "--pool=solo" ]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment: *env
    restart: unless-stopped
    depends_on:
      - inswapper
      - redis
    volumes:
      - tmp-images-volume:/usr/src/app/tmp/

    
  api:
    image: just1ce/inswapper-api-gateway:1.0.0
    build:
      context: ./ApiGateway
      dockerfile: app.dockerfile
    environment:
      - "API=http://inswapper:8000"
    depends_on:
      - inswapper
    restart: unless-stopped
    ports:
      - "3000:3000"

  minio:
    image: minio/minio
    ports:
      - "9090:9090"
    volumes:
      - minio_storage:/data
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9090" /data

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    volumes:
      - redis-volume:/data
    expose:
      - 6379

volumes:
  tmp-images-volume:
  redis-volume:
  minio_storage: {}