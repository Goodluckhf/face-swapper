version: "2"
x-environment: &env
  - CELERY_BROKER_URL=redis://redis:6379/0
  - CELERY_RESULT_BACKEND=redis://redis:6379/0
  - ACCESS_KEY=minioadmin
  - SECRET_KEY=minioadmin
  - ENDPOINT=minio:9000
  - BUCKET=data

services:
  inswapper:
    image: just1ce/inswapper-py-api:1.0.0
    build:
      context: ./InswapperService
      dockerfile: app.dockerfile
    command: uvicorn main:app --host 0.0.0.0
    restart: unless-stopped
    volumes:
      - tmp-images-volume:/usr/src/app/tmp/
    environment: *env

  worker:
    image: just1ce/inswapper-py-worker:1.0.0
    build:
      context: ./InswapperService
      dockerfile: worker.dockerfile
    command: [ "celery", "-A", "worker", "worker", "-l", "info", "--pool=solo" ]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment: *env
    restart: unless-stopped
      - redis
    volumes:
      - ./InswapperService:/usr/src/app
      - tmp-images-volume:/usr/src/app/tmp/

  api:
    image: just1ce/inswapper-api-gateway:1.0.0
    build:
      context: ./ApiGateway
      dockerfile: app.dockerfile
    environment:
      - API=http://inswapper:8000
      - MINI_APP_ID=123123
      - VK_SECRET_KEY=ktzU6P8Vbjmgq5Xy9zyX
      - MONGO=mongodb://root:example@mongo:27017/
      - ACCESS_KEY=minioadmin
      - SECRET_KEY=minioadmin
      - ENDPOINT=minio
      - PORT=9000
      - BUCKET=data
    restart: unless-stopped

  cdn:
    image: nginxinc/nginx-s3-gateway:latest-20231222
    restart: unless-stopped
    environment:
      ALLOW_DIRECTORY_LIST: "false"
      AWS_SIGS_VERSION: 2
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_NAME: data
      S3_REGION: us-east-1
      S3_SERVER_PORT: 9000
      S3_SERVER_PROTO: http
      S3_SERVER: minio
      S3_STYLE: path
      PROXY_CACHE_MAX_SIZE: 1g

  reverse-proxy:
    image: just1ce/inswapper-reverse-proxy:1.0.0
    build:
      context: ./reverse-proxy-nginx
      dockerfile: ./dockerfile
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  minio:
    image: minio/minio
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      - minio_storage:/data
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9090" /data

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    volumes:
      - redis-volume:/data
    expose:
      - 6379

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_storage:/data

volumes:
  tmp-images-volume:
  redis-volume:
  minio_storage: {}
  mongo_storage: